{
  "metadata": {},
  "message": "Caught exception -> Skipping: Error deserializing key/value for partition bss.subscriptions.subscriptionproductchangerequested.v1.yoigo-1 at offset 10663. If needed, please seek past the record to continue consumption. org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition bss.subscriptions.subscriptionproductchangerequested.v1.yoigo-1 at offset 10663. If needed, please seek past the record to continue consumption.\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing Avro message for id 800\nCaused by: org.apache.avro.AvroTypeException: Found com.masmovil.commons.avro.subscription.SubscriptionProductChangeRequested, expecting com.masmovil.commons.avro.subscription.SubscriptionProductChangeRequested, missing required field customerSegment\n\tat org.apache.avro.io.ResolvingDecoder.doAction(ResolvingDecoder.java:308) ~[service_deploy.jar:?]\n\tat org.apache.avro.io.parsing.Parser.advance(Parser.java:86) ~[service_deploy.jar:?]\n\tat org.apache.avro.io.ResolvingDecoder.readFieldOrder(ResolvingDecoder.java:127) ~[service_deploy.jar:?]\n\tat org.apache.avro.generic.GenericDatumReader.readRecord(GenericDatumReader.java:239) ~[service_deploy.jar:?]\n\tat org.apache.avro.specific.SpecificDatumReader.readRecord(SpecificDatumReader.java:123) ~[service_deploy.jar:?]\n\tat org.apache.avro.generic.GenericDatumReader.readWithoutConversion(GenericDatumReader.java:179) ~[service_deploy.jar:?]\n\tat org.apache.avro.generic.GenericDatumReader.read(GenericDatumReader.java:160) ~[service_deploy.jar:?]\n\tat org.apache.avro.generic.GenericDatumReader.read(GenericDatumReader.java:153) ~[service_deploy.jar:?]\n\tat io.confluent.kafka.serializers.AbstractKafkaAvroDeserializer$DeserializationContext.read(AbstractKafkaAvroDeserializer.java:333) ~[service_deploy.jar:?]\n\tat io.confluent.kafka.serializers.AbstractKafkaAvroDeserializer.deserialize(AbstractKafkaAvroDeserializer.java:98) ~[service_deploy.jar:?]\n\tat io.confluent.kafka.serializers.AbstractKafkaAvroDeserializer.deserialize(AbstractKafkaAvroDeserializer.java:77) ~[service_deploy.jar:?]\n\tat io.confluent.kafka.serializers.KafkaAvroDeserializer.deserialize(KafkaAvroDeserializer.java:55) ~[service_deploy.jar:?]\n\tat org.apache.kafka.common.serialization.Deserializer.deserialize(Deserializer.java:60) ~[service_deploy.jar:?]\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1365) ~[service_deploy.jar:?]\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:130) ~[service_deploy.jar:?]\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1596) ~[service_deploy.jar:?]\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1432) ~[service_deploy.jar:?]\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:684) ~[service_deploy.jar:?]\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:635) ~[service_deploy.jar:?]\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1303) ~[service_deploy.jar:?]\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1237) ~[service_deploy.jar:?]\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1210) ~[service_deploy.jar:?]\n\tat com.masmovil.commons.kafka.client.asyncwrapper.AsyncConsumer.pollRecords(AsyncConsumer.java:276) ~[service_deploy.jar:?]\n\tat com.masmovil.commons.kafka.client.asyncwrapper.AsyncConsumer.lambda$createConsumerRecordFlowableOnSubscribe$7(AsyncConsumer.java:254) ~[service_deploy.jar:?]\n\tat io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.subscribeActual(FlowableCreate.java:71) ~[service_deploy.jar:?]\n\tat io.reactivex.rxjava3.core.Flowable.subscribe(Flowable.java:15868) ~[service_deploy.jar:?]\n\tat io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach.subscribeActual(FlowableDoOnEach.java:50) ~[service_deploy.jar:?]\n\tat io.reactivex.rxjava3.core.Flowable.subscribe(Flowable.java:15868) ~[service_deploy.jar:?]\n\tat io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle.subscribeActual(FlowableDoOnLifecycle.java:39) ~[service_deploy.jar:?]\n\tat io.reactivex.rxjava3.core.Flowable.subscribe(Flowable.java:15868) ~[service_deploy.jar:?]\n\tat io.reactivex.rxjava3.core.Flowable.subscribe(Flowable.java:15804) ~[service_deploy.jar:?]\n\tat io.reactivex.rxjava3.core.Flowable.subscribe(Flowable.java:15765) ~[service_deploy.jar:?]\n\tat com.masmovil.provision.libraries.commons.kafka.consumer.KafkaConsumerServiceImpl.subscribe(KafkaConsumerServiceImpl.java:56) ~[service_deploy.jar:?]\n\tat com.masmovil.provision.consumer.mobile.verticles.SubscriptionProductChangeRequestedVerticle.lambda$start$0(SubscriptionProductChangeRequestedVerticle.java:56) ~[service_deploy.jar:?]\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [?:?]\n\tat java.util.concurrent.FutureTask.run(Unknown Source) [?:?]\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) [?:?]\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) [?:?]\n\tat java.lang.Thread.run(Unknown Source) [?:?]\n class org.apache.kafka.common.errors.SerializationException: org.apache.kafka.common.errors.SerializationException: Error deserializing key/value for partition bss.subscriptions.subscriptionproductchangerequested.v1.yoigo-1 at offset 10663. If needed, please seek past the record to continue consumption.\nCaused by: org.apache.kafka.common.errors.SerializationException: Error deserializing Avro message for id 800\nCaused by: org.apache.avro.AvroTypeException: Found com.masmovil.commons.avro.subscription.SubscriptionProductChangeRequested, expecting com.masmovil.commons.avro.subscription.SubscriptionProductChangeRequested, missing required field customerSegment\n\tat org.apache.avro.io.ResolvingDecoder.doAction(ResolvingDecoder.java:308)\n\tat org.apache.avro.io.parsing.Parser.advance(Parser.java:86)\n\tat org.apache.avro.io.ResolvingDecoder.readFieldOrder(ResolvingDecoder.java:127)\n\tat org.apache.avro.generic.GenericDatumReader.readRecord(GenericDatumReader.java:239)\n\tat org.apache.avro.specific.SpecificDatumReader.readRecord(SpecificDatumReader.java:123)\n\tat org.apache.avro.generic.GenericDatumReader.readWithoutConversion(GenericDatumReader.java:179)\n\tat org.apache.avro.generic.GenericDatumReader.read(GenericDatumReader.java:160)\n\tat org.apache.avro.generic.GenericDatumReader.read(GenericDatumReader.java:153)\n\tat io.confluent.kafka.serializers.AbstractKafkaAvroDeserializer$DeserializationContext.read(AbstractKafkaAvroDeserializer.java:333)\n\tat io.confluent.kafka.serializers.AbstractKafkaAvroDeserializer.deserialize(AbstractKafkaAvroDeserializer.java:98)\n\tat io.confluent.kafka.serializers.AbstractKafkaAvroDeserializer.deserialize(AbstractKafkaAvroDeserializer.java:77)\n\tat io.confluent.kafka.serializers.KafkaAvroDeserializer.deserialize(KafkaAvroDeserializer.java:55)\n\tat org.apache.kafka.common.serialization.Deserializer.deserialize(Deserializer.java:60)\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord(Fetcher.java:1365)\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.access$3400(Fetcher.java:130)\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords(Fetcher.java:1596)\n\tat org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1700(Fetcher.java:1432)\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords(Fetcher.java:684)\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:635)\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1303)\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1237)\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1210)\n\tat com.masmovil.commons.kafka.client.asyncwrapper.AsyncConsumer.pollRecords(AsyncConsumer.java:276)\n\tat com.masmovil.commons.kafka.client.asyncwrapper.AsyncConsumer.lambda$createConsumerRecordFlowableOnSubscribe$7(AsyncConsumer.java:254)\n\tat io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.subscribeActual(FlowableCreate.java:71)\n\tat io.reactivex.rxjava3.core.Flowable.subscribe(Flowable.java:15868)\n\tat io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnEach.subscribeActual(FlowableDoOnEach.java:50)\n\tat io.reactivex.rxjava3.core.Flowable.subscribe(Flowable.java:15868)\n\tat io.reactivex.rxjava3.internal.operators.flowable.FlowableDoOnLifecycle.subscribeActual(FlowableDoOnLifecycle.java:39)\n\tat io.reactivex.rxjava3.core.Flowable.subscribe(Flowable.java:15868)\n\tat io.reactivex.rxjava3.core.Flowable.subscribe(Flowable.java:15804)\n\tat io.reactivex.rxjava3.core.Flowable.subscribe(Flowable.java:15765)\n\tat com.masmovil.provision.libraries.commons.kafka.consumer.KafkaConsumerServiceImpl.subscribe(KafkaConsumerServiceImpl.java:56)\n\tat com.masmovil.provision.consumer.mobile.verticles.SubscriptionProductChangeRequestedVerticle.lambda$start$0(SubscriptionProductChangeRequestedVerticle.java:56)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\n\tat java.base/java.util.concurrent.FutureTask.run(Unknown Source)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n\tat java.base/java.lang.Thread.run(Unknown Source)\n\n",
  "threadName": "kafka-consumer-thread-0",
  "loggerName": "com.masmovil.commons.kafka.client.asyncwrapper.AsyncConsumer",
  "time": "2024-02-21T13:24:45.932+01:00",
  "severity": "ERROR",
  "logging.googleapis.com/operation": {
    "producer": "input"
  }
}